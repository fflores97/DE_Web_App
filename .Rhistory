shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("scripts/uploader.R")
source("scripts/DESeq.R")
library(shinydashboard)
library(DT)
runApp()
runApp()
source("scripts/uploader.R")
runApp()
runApp()
runApp()
source("scripts/uploader.R")
source("scripts/DESeq.R")
library(shinydashboard)
library(DT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::session_info()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyjs")
?shinyjs::runcode
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
git add .
runApp()
runApp()
?shinyjs::runcode
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("scripts/DESeq.R")
source("scripts/DESeq.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
list.files(".")
runApp()
runApp()
runApp()
test<-read.csv("~/Downloads/infoTable.csv")
test
a<-write.csv(test)
a
zip("lol,zip",list(write.csv(test),write.table(test)))
temp1 <- tempfile(fileext=".tsv")
temp2 <- tempfile(fileext=".csv")
temp3 <- tempfile(fileext=".tsv")
temp4 <- tempfile(fileext=".tsv")
temp5 <- tempfile(fileext=".tsv")
temp6 <- tempfile(fileext=".csv")
c(temp1,temp2)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
read.csv(
file = "~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_shNLGN4X_RNAseq_Analysis_Ekram/shNLGN4X-combined-gene-level-counts.csv",
header = T,
sep = ',',
quote = '"',
row.names = 1
)
ekram<-read.csv(
file = "~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_shNLGN4X_RNAseq_Analysis_Ekram/shNLGN4X-combined-gene-level-counts.csv",
header = T,
sep = ',',
quote = '"',
row.names = 1
)
ekram
ekramMeta<-read.csv(
file = "~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_shNLGN4X_RNAseq_Analysis_Ekram/shNLGN4X-RNA-Seq-sample-info.tsv",
header = T,
sep = ',',
quote = '"',
row.names = 1
)
ekramMeta
rownames(ekramMeta)
ekramMeta<-read.csv(
file = "~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_shNLGN4X_RNAseq_Analysis_Ekram/shNLGN4X-RNA-Seq-sample-info.tsv",
header = T,
sep = '\t',
quote = NULL,
row.names = 1
)
ekramMeta
rownames(ekramMeta)==colnames(ekram)
intersect(rownames(ekramMeta),colnames(ekram))
colnames(ekram)
rownames(ekramMeta)
ekram<-read.csv(
file = "~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_shNLGN4X_RNAseq_Analysis_Ekram/shNLGN4X-combined-gene-level-counts.csv",
header = T,
sep = ',',
quote = '"',
row.names = 1,check.names = F
)
ekram
colnames(ekram)
colnames(ekram)==rownames(colData)
colnames(ekram)==rownames(ekramMeta)
runApp()
runApp()
runApp()
runApp()
runApp()
lol<-read.csv("~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_NLGN4_RNAseq_Analysis_Felipe/infoTable.csv",header=T,stringsAsFactors = F,row.names = 1,check.names = F)
lol
lol<-read.csv("~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_NLGN4_RNAseq_Analysis_Felipe/shNLGN4X-combined-gene-level-counts.csv",header=T,stringsAsFactors = F,row.names = 1,check.names = F)
lol1<-read.csv("~/Dropbox (Partners HealthCare)/DFCI_Rotation_Students-Bojana-Polyak-Lab/2017_Felipe_Flores_and_Nick_Harper/SUM159_NLGN4_RNAseq_Analysis_Felipe/infoTable.csv",header=T,stringsAsFactors = F,row.names = 1,check.names = F)
lol
head(lol)
head(lol1)
shiny::runApp()
source('~/bin/felipeCommonFunctions/R/samplePCA.R')
expressionMatrix<-read.csv("~/Downloads/shNLGN4X-combined-gene-level-counts.csv",row.names = 1,header = T,stringsAsFactors = F)
sampleData<-read.csv('~/Downloads/infoTable.csv')
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
source('~/bin/felipeCommonFunctions/R/samplePCA.R')
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
source('~/bin/felipeCommonFunctions/R/samplePCA.R')
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
source('~/bin/felipeCommonFunctions/R/samplePCA.R')
output<-samplePCA(expressionMatrix =  expressionMatrix,numberOfPCs = 2)
# if(!is.tibble(expressionMatrix)){
#   expressionMatrix1 <- as_tibble(expressionMatrix,rownames = "Sample")
# } else{
#   expressionMatrix1 <- expressionMatrix
# }
expressionMatrix1<-as_tibble(expressionMatrix,rownames = "Sample")
pca <- expressionMatrix1 %>%
nest() %>%
mutate(pca = map(data, ~ stats::prcomp(.x %>% select(-Sample),
center = TRUE, scale = TRUE)),
pca_aug = map2(pca, data, ~broom::augment(.x, data = .y)))
var_exp_df <- pca %>%
unnest(.,pca_aug) %>%
summarize_at(.vars = vars(contains("PC")), .funs = funs(var)) %>%
gather(key = pc, value = variance) %>%
mutate(var_exp = variance/sum(variance),cum_var_exp=cumsum(var_exp),pc = str_replace(pc, ".fitted", ""))
var_exp_df
test<- var_exp_df %>% rename(Individual=var_exp,Cumulative=cum_var_exp)
test<- var_exp_df %>% rename(Individual="var_exp",Cumulative=cum_var_exp)
test<- var_exp_df %>% rename(Individual="var_exp",Cumulative="cum_var_exp")
test<- var_exp_df %>% rename(.,Individual="var_exp",Cumulative="cum_var_exp")
var_exp_df
var_exp_df %>% rename(lol=var_exp)
var_exp_df %>% select(lol=var_exp)
var_exp_df %>% rename(lol=var_exp)
var_exp_df %>% dplyr::rename(lol=var_exp)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
expressionMatrix <- read.csv("~/Downloads/shNLGN4X-combined-gene-level-counts.csv",header = TRUE,row.names = 1,stringsAsFactors = FALSE)
infoTable <- read.csv("~/Downloads/infoTable.csv",header = TRUE)
pca <- samplePCA(expressionMatrix = expressionMatrix,numberOfPCs = 3)
sampleCorrelation <- print(sampleCorrelation(normalizedCountsTable = expressionMatrix))
devtools::install_github("polyak-lab/felipeCommonFunctions")
install.packages("tidyverse")
install.packages("tidyverse")
tidyverse::tidyverse_packages()
tidyverse::tidyverse_packages()
tidyverse::tidyverse_update()
install.packages("devtools")
install.packages("devtools")
devtools::install_github("polyak-lab/felipeCommonFunctions")
install_github("jokergoo/ComplexHeatmap")
devtools::install_github("jokergoo/ComplexHeatmap")
devtools::install_github("polyak-lab/felipeCommonFunctions")
install.packages("Rtsne")
devtools::install_github("polyak-lab/felipeCommonFunctions")
library("felipeCommonFunctions", lib.loc="/usr/local/lib/R/3.4/site-library")
source('~/Desktop/Felipe-Code/DE_Web_App/scripts/testScript.R')
class(sampleCorrelation)
class(pca$importancePlot)
class(pca$pcaPlot)
test <- print(sampleCorrelation)
is.ggplot(pca$importancePlot)
is.ggplot(pca$pcaPlot)
class(pca$pcaPlot)=="gg"
if(class(pca$pcaPlot)=="gg"){1+1}
if(any(class(pca$pcaPlot)=="gg")){1+1}
ggsave(plot = sampleCorrelation)
pdf("/tests/correlationTest.pdf")
print(sampleCorrelation)
dev.off()
getwd()
pdf("tests/correlationTest.pdf")
print(sampleCorrelation)
dev.off()
)
print(sampleCorrelation)
dev.off()
pdf("tests/correlationTest.pdf", width = 7, height=5)
print(sampleCorrelation)
dev.off()
pdf("tests/correlationTest.pdf", width = 12, height=5)
print(sampleCorrelation)
dev.off()
outputFolder=tempdir()
ls(outputFolder)
outputFolder
list.files(outputFolder)
list.files(outputFolder, pattern = "*.pdf")
pdf(paste(sessionDir,"correlationTest.pdf", sep = ""), width = 12, height=5)
print(sampleCorrelation)
dev.off()
sessionDir <- outputFolder
pdf(paste(sessionDir,"correlationTest.pdf", sep = ""), width = 12, height=5)
print(sampleCorrelation)
dev.off()
list.files(outputFolder, pattern = "*.pdf")
list.files(outputFolder)
pdf(paste(sessionDir,"/correlationTest.pdf", sep = ""), width = 12, height=5)
print(sampleCorrelation)
dev.off()
list.files(outputFolder, pattern = "*.pdf")
install.packages("shiny")
# Similarly, save the other plots
pcaFileNames <- c("pcaImportancePlot.pdf", "pcaPlot.pdf")
paste(pcaFileNames,"lol")
# Similarly, save the other plots
pcaFileNames <- paste(sessionDir,"/",c("pcaImportancePlot.pdf", "pcaPlot.pdf"))
pcaFileNames
# Similarly, save the other plots
pcaFileNames <- paste(sessionDir,"/",c("pcaImportancePlot.pdf", "pcaPlot.pdf"), sep = "")
pcaFileNames
shiny::runApp()
install.packages("shinydashboard")
runApp()
install.packages("DT")
runApp()
install.packages("shinyjs")
runApp()
BiocInstaller::biocLite("DESeq2")
BiocInstaller::biocLite("DESeq2")
runApp()
zip(zipfile = "lol.zip", files = list.files(path = sessionDir, pattern = "*.pdf"))
zip(zipfile = "lol.zip", files = paste(sessionDir,"/",list.files(path = sessionDir, pattern = "*.pdf"), sep = "")
)
shiny::runApp()
sessionDir
runApp()
